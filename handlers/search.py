from pyrogram import Client
from pyrogram.types import Message, CallbackQuery
from model.user import UserStatus
from app import user_service, match_manager, match_service

def init_search(client: Client, message: Message, user = None):
    user_id = message.from_user.id if not user else user.id 
    user = user_service.authenticate(user_id)

    if user.status == UserStatus.BUSY:
        message.reply(
            '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π –¥–∏–∞–ª–æ–≥. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –µ–≥–æ –∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /quit.'
        )
        return
    

    message.reply(
        '–°–µ–π—á–∞—Å –Ω–∞–π–¥–µ–º –≤–∞–º –ø–∞—Ä—É –¥–ª—è –ø–µ—Ä–µ–ø–∏—Å–∫–∏...'
    )
    # match = match_manager.search_match(user.id, UserStatus.ACTIVE)
    match = match_service.search(user.id)
    if match == None:
        message.reply(
            '–ú—ã –ø–æ–∫–∞ –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –≤–∞–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞. –û–Ω–∏ –≤—Å–µ –∑–∞–Ω—è—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ.'
        )
        return
    
    match_service.open_conversation(user.id, match)
    user_service.set_busy(user.id)
    user_service.set_busy(match)
    
    client.send_message(
        match, 
        '–ú—ã –Ω–∞—à–ª–∏ –≤–∞–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞! –í—Å–µ, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –µ–º—É üîΩ'
    )
    message.reply(
        '–ú—ã –Ω–∞—à–ª–∏ –≤–∞–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ —É–≤–µ–¥–æ–º–∏–ª–∏ –µ–≥–æ. –í—Å–µ, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –µ–º—É üîΩ'
    )





def search_button(client: Client, callback_query: CallbackQuery):
    init_search(client, callback_query.message, callback_query.from_user)